[{"path":"https://ctesta01.github.io/Simulacron3/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Simulacron3 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ctesta01.github.io/Simulacron3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christian Testa. Author, maintainer.","code":""},{"path":"https://ctesta01.github.io/Simulacron3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Testa C (2025). Simulacron3: Simulations using R6 Class Boilerplate Workflow. R package version 0.0.001, https://ctesta01.github.io/Simulacron3/.","code":"@Manual{,   title = {Simulacron3: Simulations using an R6 Class for a Boilerplate Workflow},   author = {Christian Testa},   year = {2025},   note = {R package version 0.0.001},   url = {https://ctesta01.github.io/Simulacron3/}, }"},{"path":"https://ctesta01.github.io/Simulacron3/index.html","id":"simulacron3-","dir":"","previous_headings":"","what":"Simulations using an R6 Class for a Boilerplate Workflow","title":"Simulations using an R6 Class for a Boilerplate Workflow","text":"purpose Simulacron3 package provide easy--use boilerplate functionality simple simulation studies. common, archetypal example usecase comparing performance multiple estimators sample size training data increases. fundamental thesis package many simulation studies (statistical performance estimators) follow following workflow:","code":""},{"path":"https://ctesta01.github.io/Simulacron3/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Simulations using an R6 Class for a Boilerplate Workflow","text":"","code":"library(Simulacron3) # Example Usage # Define a data generating process dgp <- function(n) data.frame(x = rnorm(n), y = rnorm(n))  # Define some estimators estimators <- list(   mean_estimator = function(data) mean(data$x),   var_estimator = function(data) var(data$x) )  # Define a summary statistics function  #  # An estimator can potentially return a lot more data than can be stored # in one row of results, so the summary_stats functions are used to  # condense that information down.  Here they're not doing very much, but # in more advanced simulations we will see why they're crucial.  summary_func <- function(iter = NULL, est_results, data = NULL) {   data.frame(     mean_est = est_results$mean_estimator,     var_est = est_results$var_estimator   ) }  # Create a simulation object sim <- Simulation$new()  # Set up the simulation sim$set_dgp(dgp) sim$set_estimators(estimators) sim$set_config(list(replications = 500, sample_size = 50)) sim$set_summary_stats(summary_func)  # Run the simulation sim$run() ## Running simulation... # Retrieve results results <- sim$get_results() head(results) ##      mean_est   var_est ## 1  0.11005384 1.0486198 ## 2  0.01653653 0.7218143 ## 3 -0.08883892 1.0054565 ## 4 -0.02003580 0.9023866 ## 5  0.05607333 1.1312612 ## 6  0.06813891 1.0419888"},{"path":"https://ctesta01.github.io/Simulacron3/index.html","id":"package-internals","dir":"","previous_headings":"","what":"Package Internals","title":"Simulations using an R6 Class for a Boilerplate Workflow","text":"Simulacron3 meant easy understand source code (much ) users can easily reason expect simulations. Check source, especially $run() method : https://github.com/ctesta01/Simulacron3/blob/main/R/Simulation.R","code":""},{"path":"https://ctesta01.github.io/Simulacron3/index.html","id":"package-title-inspiration","dir":"","previous_headings":"Package Internals","what":"package title inspiration","title":"Simulations using an R6 Class for a Boilerplate Workflow","text":"quote Wikipedia:  Simulacron-3 (1964), Daniel F. Galouye, American science fiction novel featuring early literary description simulated reality. time events unwind, [Fuller] progressively grasps world probably “real” might computer-generated simulation.","code":""},{"path":"https://ctesta01.github.io/Simulacron3/index.html","id":"other-related-works","dir":"","previous_headings":"","what":"Other Related Works","title":"Simulations using an R6 Class for a Boilerplate Workflow","text":"Simulacron3 one many attempts standardize workflow running simulations. lot inspiration taken : simChef SimEngine simcausal simulator","code":""},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation R6Class — Simulation","title":"Simulation R6Class — Simulation","text":"Takes specification data generating process (dgp), list estimators, config, list summary_statistics compute, provides get_results method.","code":""},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation R6Class — Simulation","text":"core idea statistical simulation study consists specifying repeatable data generating process, functions (estimators) run generated data sample, summary statistics compute simulation results (typically indicate aspects performance estimators considered). represented following pipeline:","code":"dgp   estimators    ->  Simulation$new( ... ) -> sim$run() -> sim$get_results()   config   summary_fns"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Simulation R6Class — Simulation","text":"dgp function takes single argument n sample size generates synthetic data. estimators list estimators can called data config list containing least number replications perform, sample_size use, whether simulation quiet, whether run parallel. summary_stats list summary statistic functions can called estimates produced results data.frame results running simulation initialize Method initialize simulation object (nothing) set_dgp Method set data generating process set_estimators Method set estimators set_config Method set configuration get_results Method retrieve results set_summary_stats Method set summary statistics run Method run simulation","code":""},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Simulation R6Class — Simulation","text":"initialize Method initialize simulation object (nothing) set_dgp Method set data generating process set_estimators Method set estimators set_config Method set configuration get_results Method retrieve results set_summary_stats Method set summary statistics run Method run simulation","code":""},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Simulation R6Class — Simulation","text":"Simulation$new() Simulation$set_dgp() Simulation$set_estimators() Simulation$set_config() Simulation$set_summary_stats() Simulation$run() Simulation$get_results() Simulation$clone()","code":""},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$new()"},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$set_dgp(dgp_func)"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation R6Class — Simulation","text":"dgp_func data generating process function (one argument, n) produces dataset simulation purposes sample size given.","code":""},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$set_estimators(estimator_list)"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation R6Class — Simulation","text":"estimator_list list functions can evaluated data output data generating process self$dgp.","code":""},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$set_config(config_list)"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation R6Class — Simulation","text":"config_list list configuration settings simulation. following used Simulacron3::Simulation default: replications (integer), sample_size, quiet parallel.","code":""},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$set_summary_stats(summary_func)"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation R6Class — Simulation","text":"summary_func summary function set simulation. summary_func take arguments , est_results, data.","code":""},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$run()"},{"path":[]},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$get_results()"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Simulation R6Class — Simulation","text":"objects class cloneable method.","code":""},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation R6Class — Simulation","text":"","code":"Simulation$clone(deep = FALSE)"},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation R6Class — Simulation","text":"deep Whether make deep clone.","code":""},{"path":"https://ctesta01.github.io/Simulacron3/reference/Simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation R6Class — Simulation","text":"","code":"if (FALSE) { # \\dontrun{ # Example Usage # Define a data generating process dgp <- function(n) data.frame(x = rnorm(n), y = rnorm(n))  # Define some estimators estimators <- list(   mean_estimator = function(data) mean(data$x),   var_estimator = function(data) var(data$x) )  # Define a summary statistics function summary_func <- function(iter = NULL, est_results, data = NULL) {   data.frame(     mean_est = est_results$mean_estimator,     var_est = est_results$var_estimator   ) }  # Create a simulation object sim <- Simulation$new()  # Set up the simulation sim$set_dgp(dgp) sim$set_estimators(estimators) sim$set_config(list(replications = 500, sample_size = 50)) sim$set_summary_stats(summary_func)  # Run the simulation sim$run()  # Retrieve results results <- sim$get_results() head(results) } # }"}]
